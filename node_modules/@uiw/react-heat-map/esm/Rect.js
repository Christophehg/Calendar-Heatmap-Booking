import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/objectWithoutPropertiesLoose";
var _excluded = ["style", "value", "render", "key"];
import React from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
export var rectStyle = {
  display: 'block',
  cursor: 'pointer'
};
export var Rect = props => {
  var {
      style,
      value,
      render
    } = props,
    reset = _objectWithoutPropertiesLoose(props, _excluded);
  var rectProps = _extends({}, reset, {
    style: _extends({
      display: 'block',
      cursor: 'pointer'
    }, style)
  });
  if (render && typeof render === 'function') {
    var elm = render(_extends({}, rectProps), value);
    if (elm && /*#__PURE__*/React.isValidElement(elm)) {
      return elm;
    }
  }
  return /*#__PURE__*/_jsx("rect", _extends({}, rectProps));
};